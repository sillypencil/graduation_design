var mysql=require('mysql');
//新建评论
 function insertComment(client , obj, callback){
     client.query('insert into comment values(?,?,?,?)', 
        [obj.content, obj.time, obj.tnumber, obj.evaluator], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
}     

//查询评论
function  selectcomment(client,tnumber,callback){
     client.query('select content,time,tnumber,evaluator from comment where tnumber="'+tnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //删除评论
 function  deleteComment(client,id,callback){
     client.query('delete from comment where id="'+id+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
 //添加好友申请
 function insertApply(client , obj, callback){
     client.query('insert into friending values(?,?,?,?,?)', 
        [obj.applyer, obj.receiver,obj.result,obj.sendtime,obj.dealtime], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
}     

//查询好友申请（含去除applyer和receiver相同的查询）
function  selectcomment(client,receiver,callback){
     client.query('select distinct applyer,receiver from friending where receiver="'+receiver+'"',
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //更新申请信息
function updateApply(client , obj , callback){
    client.query('update friending set result =? ,dealtime =? '+
        'where applyer ="' + obj.applyer + '" and receiver ="' + obj.receiver + '" and result = null',
     [obj.result, obj.dealtime], 
     function(err,result){
         if( err ){
            console.log("error:"+err.message);
            return err;
         }
          callback(err);
    });
}

//添加消息
 function insertMsg(client , obj, callback){
     client.query('insert into message values(?,?,?,?,?)', 
        [obj.time,obj.sender, obj.receiver,obj.content,obj.isread], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
}     

//读取消息
function  selectMsg(client,obj,callback){
     client.query('select * from message where sender="'+obj.sender+'" and receiver="'+obj.receiver+'"',
        [obj.sender,obj.receiver],
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //区分已读未读
function updateMsg(client , obj , callback){
    client.query('update message set isread = true where sender ="' + obj.sender + '" and receiver = "' + obj.receiver + '"',
     [obj.sender, obj.receiver], 
     function(err,result){
         if( err ){
            console.log("error:"+err.message);
            return err;
         }
          callback(err);
    });
}

//新增项目
 function insertPro(client , obj, callback){
     client.query('insert into project(name, intro,cycle,days,finish,startdate,ispublic,creater,environment) values(?,?,?,?,?,now(),?,?,?)', 
        [obj.name, obj.intro, obj.cycle, obj.days, obj.finish, obj.ispublic, obj.creater, obj.environment], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
         // console.log(err);
           callback(result);
     });
}     


//修改项目信息
function updatePro(client , obj , callback){
    client.query('update project set name =? ,intro =? ,cycle =? ,days =? ,finish =? ,startdate =? where pnumber ="' + obj.pnumber + '"',
     [obj.name, obj.intro, obj.cycle, obj.days, obj.content, obj.finish, obj.startdate], 
     function(err,result){
         if( err ){
            console.log("error:"+err.message);
            return err;
         }
          callback(err);
    });
}

//删除项目
 function  deletePro(client,pnumber,callback){
     client.query('delete from project where pnumber="'+pnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

//根据项目编号的精确查询
function  selectPnum(client,pnumber,callback){
     client.query('select name,pnumber from project where pnumber="'+pnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }


//根据关键字的模糊查询
function  selectKwd(client,Kwd,callback){
     client.query('select name,pnumber from project where name like %"'+Kwd+'"%',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

//根据项目编号获取所有项目信息
function  selectPro(client,pnumber,callback){
     client.query('select * from project where pnumber="'+pnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
 //新增任务
 function insertTask(client , obj, callback){
     client.query('insert into task values(?,?,?,?,?,?,?)', 
        [obj.name, obj.content, obj.days, obj.personnum, obj.stage, obj.startdate,obj.pnumber], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
}     


//修改任务信息
function updateTask(client , obj , callback){
    client.query('update task set name =? ,content =? ,days =? ,personnum =? ,stage =? ,startdate =? ,pnumber =? where tnumber ="' + obj.tnumber + '"',
     [obj.name, obj.content, obj.days, obj.personnum, obj.finish, obj.startdate, obj.pnumber], 
     function(err,result){
         if( err ){
            console.log("error:"+err.message);
            return err;
         }
          callback(err);
    });
}

//删除任务
 function  deleteTask(client,tnumber,callback){
     client.query('delete from task where tnumber="'+tnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

//根据所属项目编号的精确查询
function  selectTnum(client,pnumber,callback){
     client.query('select name,content,stage,startdate from task where pnumber="'+pnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }


//根据任务编号获取任务的所以信息
function  selectAtask(client,tnumber,callback){
     client.query('select * from task where tnumber="'+tnumber+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
//登录密码验证（查找）
 function  selectPassword(client,email,callback){
     //client为一个mysql连接对象
     client.query('select password from user where email="'+email+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
 
 //添加用户信息(注册)
 function insertUser(client , obj, callback){
     client.query('insert into user values(?,?,?,?,?,?,?)', 
        [obj.password, obj.email, obj.phone, obj.name, obj.sex, obj.snumber, obj.identity], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
 }
 
//修改用户信息
function updateUser(client , obj , callback){
    client.query('update user set password =? ,phone =? ,name =? ,sex =? ,snumber =? ,identity =? where email ="' + obj.email + '"',
     [obj.password, obj.phone, obj.name, obj.sex, obj.snumber, obj.identity], 
     function(err,result){
         if( err ){
            console.log("error:"+err.message);
            return err;
         }
          callback(err);
    });
}

//查询用户个人信息
function  selectUser(client,email,callback){
     client.query('select email,phone,name,sex,snumber,identity from user where email="'+email+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }


//查询其他用户个人信息
function  selectOtheruser(client,email,callback){
     client.query('select email,name,sex,identity from user where email="'+email+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //查询用户名
function  selectUsername(client,email,callback){
     client.query('select name from user where email="'+email+'"',function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
 //新建用户与项目之间的关系
 function insertRup(client , obj, callback){
     client.query('insert into user_project(email, pnumber) values(?,?)', 
        [obj.email, obj.pnumber], 
        function(err,results,fields){
            if( err ){
                 console.log( "error:" + err.message);
                 return err;
            }
            callback(results);
     });
}     

//根据用户查询其参与的项目
function  selectProByUser(client,email,callback){
     client.query('select * from project where pnumber in '+
        '(select pnumber from user_project where email="'+email+'")',
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //根据用户查询其参与所有项目的所有信息
 // function selectAllProByUser(client, email, callback){
 //    client.query('select * from project LEFT OUT JOIN project_comment ON(project.pnumber = project_comment.pnumber'+
 //        ' and project.pnumber in'+
 //        '(select pnumber from user_project where email = "'+email+'"))'+
 //        'GROUP BY project.pnumber', function(err, results, fields){
 //            if(err) throw err;
 //            callback(results);
 //        })
 // }
 function selectAllProByUser(client, email, callback){
    client.query('select project.pnumber, '+
        'project.intro, '+
        'project.name '+
        'project.cycle, '+
        'project.days, '+
        'project.finish, '+
        'project.startdate, '+
        'project.ispublic, '+
        'project.environment, '+
        'project.creater, '+
        'project_comment.id, '+
        'project_comment.evaluator, '+
        'project_comment.date, '+
        'project_comment.content, '+
        'project_comment.evaluatorname, '+
        'FROM project left join project_comment on(project.pnumber = project_comment.pnumber'+
        ' and project.pnumber in'+
        '(select pnumber from user_project where email = "'+email+'"))', function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }


//根据项目查询其参与者
function  selectUserByPro(client,pnumber,callback){
     client.query('select name,email from user where email in '+
        '(select email from user_project where pnumber="'+pnumber+'")',
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //根据email查询所有队友
function selectTeammates(client, email, callback){
    // client.query('select name, email form user where email in '+
    //     '(select email from user_project where pnumber in '+
    //         '(select pnumber from user_project where email = "'+ email +'") and email <> "' + email +
    //         '")',
    client.query('select email, name from user where email in'+
        '( select email from user_project where pnumber in'+
            '(select pnumber from user_project where email = "'+ email+'") )'+
        ' and email <> "'+email+'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
}

 //添加好友
 function insertFriend(client , obj, callback){
     client.query('insert into user_user values(?,?,?)', 
        [obj.user1, obj.user2,obj.isFriend], 
        function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
}     

//查询好友
function  selectFriend(client,email,callback){
     client.query('select * from user_user where user1 = "'+email+'" or user2 = "'+email+
        '" and user1 not in (select user2 from user_user where user1 = "'+email+'")',
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }
//查询好友信息
 function  selectFriendData(client,email,callback){

    client.query('select name, email from user where email in '+
        '(select user2 from user_user where user1="'+ email +'" '+
            'UNION '+
            'select user1 from user_user where user2="'+email+'"'+
            ')',function(err,results,fields){
        if(err) throw err;
        callback(results);
    })
 }

  //删除好友关系
 function  deleteFriend(client,id,callback){
     client.query('delete from user_user where id="'+id+'"',
        function(err,results,fields){
         if(err) throw err;
        
  callback(results);
     });
 }

 //插入项目评论
 function insertpComment(client,obj,callback){
    client.query('insert into project_comment(pnumber, evaluator, date, content, evaluatorname, projectName) values(?,?,now(),?,?,?)',
        [obj.pnumber, obj.evaluator, obj.content, obj.name, obj.projectName],function(err, results, fields){
            if(err) throw err;
            callback(results)
        })
 }

 //查询项目所有评论
 function selectpComment(client, pnumber,callback){
    client.query('select * from project_comment where pnumber="'+pnumber+'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }

 //根据评论ID查询项目评论
 function selectpCommrnyById(client, id, callback){
    client.query('select * from project_comment where id="'+id+'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }

 //删除项目评论
 function deletepComment(client, pcid, callback){
    client.query('delect from project_comment where id="'+ pcid +'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }

 //插入任务评论
 function insertTaskComment(client,obj,callback){
    client.query('insert into task_comment(tnumber, evaluator, date, content, evaluatorname) values(?,?,now(),?,?)',
        [obj.tnumber, obj.evaluator, obj.content, obj.evaluatorname],function(err, results, fields){
            if(err) throw err;
            callback(results)
        })
 }
 //查询任务所有评论
  function selectTaskComment(client, pnumber,callback){
    client.query('select * from task_comment where pnumber="'+tnumber+'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }

 //删除任务评论
function deleteTaskComment(client, tcid, callback){
    client.query('delect from task_comment where id="'+ tcid +'"',
        function(err, results, fields){
            if(err) throw err;
            callback(results);
        })
 }



exports.insertComment = insertComment;
exports.selectcomment = selectcomment;
exports.deleteComment = deleteComment;
exports.insertApply = insertApply;
exports.selectcomment = selectcomment;
exports.updateApply = updateApply;
exports.insertMsg = insertMsg;
exports.selectMsg = selectMsg;
exports.updateMsg = updateMsg;
exports.insertPro = insertPro;
exports.updatePro = updatePro;
exports.deletePro = deletePro;
exports.selectPnum = selectPnum;
exports.selectKwd = selectKwd;
exports.selectPro = selectPro;
exports.insertTask = insertTask;
exports.updateTask = updateTask;
exports.deleteTask = deleteTask;
exports.selectTnum = selectTnum;
exports.selectAtask = selectAtask;
exports.selectPassword  = selectPassword;
exports.insertUser = insertUser;
exports.updateUser = updateUser;
exports.selectUser = selectUser;
exports.selectOtheruser = selectOtheruser;
exports.selectUsername = selectUsername;
exports.insertRup = insertRup;
exports.selectProByUser = selectProByUser;
exports.selectAllProByUser = selectAllProByUser;

exports.selectUserByPro = selectUserByPro;
exports.insertFriend = insertFriend;
exports.selectFriend = selectFriend;
exports.deleteFriend = deleteFriend;
exports.selectFriendData = selectFriendData;
exports.selectTeammates = selectTeammates;
exports.insertpComment = insertpComment;
exports.selectpComment = selectpComment;
exports.deletepComment = deletepComment;
exports.selectpCommrnyById = selectpCommrnyById;
exports.insertTaskComment = insertTaskComment;
exports.selectTaskComment = selectTaskComment;
exports.deleteTaskComment = deleteTaskComment;

 // function  selectFun(client,email,callback){
 //     //client为一个mysql连接对象
 //     client.query('select password from user where email="'+email+'"',function(err,results,fields){
 //         if(err) throw err;
 
 //         callback(results);
 //     });
 // }
 
 // function insertFun(client , obj, callback){
 //    console.log("obj : ");
 //    for(var i in obj ){
 //        console.log(i+ ": " +obj[i]);
 //    }
 //     client.query('insert into user value(?,?,?,?,?,?,?)', [obj.password, obj.email, obj.phone, obj.name, obj.sex, obj.snumber, obj.identity], function(err,result){
 //         if( err ){
 //             console.log( "error:" + err.message);
 //             return err;
 //         }
 //           callback(err);
 //     });
 // }

 // exports.selectFun  = selectFun;
 // exports.insertFun = insertFun;